import { Composer } from "grammy"
import { COFFEE_STICKERS, SHOCK_PATALOCK, TEA_STICKERS, TOKU_CHAT, WORLD_TRIGGER, PON_STICKER } from "../constants"
import { DrinkCounters } from "../data"

export const fun = new Composer

const drinksCounters = DrinkCounters.fromFileSyncSafe('data/drinks.json')

// –®–û–ö –ü–ê–¢–ê–õ–û–ö
fun.hears(/–ø(–∞|a)—Ç(–∞|a)–ª(–æ|o)–∫|501\s?271|–æ–±–ª–∞—Å—Ç—å/gim, ctx => ctx.replyWithAudio(SHOCK_PATALOCK, { reply_to_message_id: ctx.msg.message_id }))

fun.hears(/—Ç—Ä–∏–≥–≥–µ—Ä/gim, ctx => ctx.replyWithSticker(WORLD_TRIGGER, { reply_to_message_id: ctx.msg.message_id }))

// –ü–æ–Ω
fun.hears(/(\P{L}|^)–ø–æ–Ω(\P{L}|$)/gimu, ctx => ctx.replyWithSticker(PON_STICKER, { reply_to_message_id: ctx.msg.message_id }))

fun.on(':sticker').filter(ctx => ctx.msg.chat.id == TOKU_CHAT, async ctx => {
    const sticker = ctx.msg.sticker.file_unique_id
    let drink: string
    let count: number
    let emoji: string
    let achivement = ''

    if(!TEA_STICKERS.concat(COFFEE_STICKERS).includes(sticker)) {
        return
    }

    if(TEA_STICKERS.includes(sticker)) {
        drinksCounters.tea += 1
        drink = '—á—è'
        count = drinksCounters.tea
        emoji = 'üçµ'
        switch(count) {
            case 1:
                achivement = '–ß–∞–π –±—É—à?'
                break
            case 28:
                achivement = '–í—ã –≤—ã–ø–∏–ª–∏ –≤–µ–¥—Ä–æ —á—è :0'
                break
            case 75:
                achivement = '–•–≤–∞—Ç–∏—Ç –Ω–∞ –∞–∫–≤–∞—Ä–∏—É–º. –° —á–∞–µ–º.'
                break
            case 80:
                achivement = '"–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–≥–æ–¥–Ω—è. –¢–æ –ª–∏ —á–∞–π –ø–æ–π—Ç–∏ –≤—ã–ø–∏—Ç—å, —Ç–æ –ª–∏ –ø–æ–≤–µ—Å–∏—Ç—å—Å—è." (–ø—Ä–∏–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ê.–ü.–ß–µ—Ö–æ–≤—É)'
                break
            case 90:
                achivement = '"–ß–∞–π! –í–æ—Ç —á—Ç–æ –º–Ω–µ –±—ã–ª–æ –Ω—É–∂–Ω–æ! –•–æ—Ä–æ—à–∞—è —á–∞—à–∫–∞ —á–∞—è! –ü–µ—Ä–µ–≥—Ä–µ—Ç—ã–π –Ω–∞—Å—Ç–æ–π —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Ä–∞–¥–∏–∫–∞–ª–æ–≤ –∏ —Ç–∞–Ω–∏–Ω–∞, –æ–Ω –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è." (c) 10 –î–æ–∫—Ç–æ—Ä'
            case 100:
                achivement = '–¢–≤–æ–π —á–π –ø—Ä–æ–Ω–∑–∏—Ç –Ω–µ–±–µ—Å–∞!'
                break
            case 110:
                achivement = '‚Äî –•–æ—á–µ—à—å —á–∞—é?\n‚Äî –•–º... –ß–∞–π... –ú—ã —Ç–æ–ª—å–∫–æ –∏ –¥–µ–ª–∞–µ–º —Ç—É—Ç, —á—Ç–æ –ø—å–µ–º —á–∞–π. –ü–æ—Ä–∞–∂–∞—é—Å—å, –∫–∞–∫ –º—ã –≤ –Ω–µ–º –µ—â–µ –Ω–µ –∑–∞—Ö–ª–µ–±–Ω—É–ª–∏—Å—å.\n(–û—Ç–≥–æ–ª–æ—Å–∫–∏ –ø—Ä–æ—à–ª–æ–≥–æ)'
                break
            case 120:
                achivement = '–ß–∞—é? –≠—Ç–æ –∫–∞–∫ –æ–±—ä—è—Ç–∏—è. –¢–æ–ª—å–∫–æ –≤ —á–∞—à–∫–µ. (–ú–µ–Ω—Ç–∞–ª–∏—Å—Ç)'
                break
            case 130:
                achivement = '–¢–∞–∫–∏–µ –Ω—ã–Ω—á–µ –≤—Ä–µ–º–µ–Ω–∞, ‚Äî –∏–∑—Ä—ë–∫ –º–∏—Å—Ç–µ—Ä –ù–æ—Ä—Ä–∏—Å, –ø—Ä–∏–Ω—è–≤ —á–∞—à–∫—É —á–∞—è, ‚Äî —Ç–µ–±–µ –º–µ—à–∞—é—Ç –∂–∏—Ç—å, –∞ —Ç—ã –º–µ—à–∞–µ—à—å –ª–æ–∂–µ—á–∫–æ–π —á–∞–π.'
                break
            case 140:
                achivement = '–ù–µ –ø–µ–π —á–∞–π —Ç–∞–º, –≥–¥–µ —Ç–µ–±—è –Ω–µ–Ω–∞–≤–∏–¥—è—Ç.'
                break
            case 150:
                achivement = '"–Ø –¥–æ–ª–∂–µ–Ω –±—ã–ª –ø–∏—Ç—å –º–Ω–æ–≥–æ —á–∞—è, –∏–±–æ –±–µ–∑ –Ω–µ–≥–æ –Ω–µ –º–æ–≥ —Ä–∞–±–æ—Ç–∞—Ç—å. –ß–∞–π –≤—ã—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥—Ä–µ–º–ª—é—Ç –≤ –≥–ª—É–±–∏–Ω–µ –º–æ–µ–π –¥—É—à–∏." –õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π'
                break
            case 200:
                achivement = '–ü–æ—Ä–∞ –∑–∞–≤–æ–¥–∏—Ç—å —á–∞–µ–≥–æ–Ω–Ω—ã–π –∞–ø–ø–∞—Ä—Ç –Ω–∞ 60 –ª–∏—Ç—Ä–æ–≤.'
            case 250:
                achivement = '–¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–∑ —á–∞—è.'
                break
            case 300:
                achivement = '–•–≤–∞—Ç–∏—Ç —á—Ç–æ–±—ã –Ω–∞–ø–æ–ª–Ω–∏—Ç—å —Å—Ç–∏—Ä–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É. –ß–∞–µ–º, –∫–æ–Ω–µ—á–Ω–æ –∂–µ.'
            case 1337:
                achivement = '31337 t34'
                break
        }
    } else {
        drinksCounters.coffee += 1
        drink = '–∫—Ñ–µ'
        count = drinksCounters.coffee
        emoji = '‚òïÔ∏è'
        switch(count) {
            case 1:
                achivement = '–ù–∞ —ç—Ç–æ–º —Ç—ã –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è. –¢–∞–∫ –º–Ω–µ —Å–∫–∞–∑–∞–ª –º–æ–π –ø–æ–±–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç.'
                break
            case 50:
                achivement = 'What is this, a coffee episode?'
                break
            case 60:
                achivement = '–ù–∏—á—Ç–æ –Ω–∞ —Å–≤–µ—Ç–µ –Ω–µ –¥–∞—ë—Ç—Å—è –¥–∞—Ä–æ–º. –î–∞–∂–µ –∫–æ—Ñ–µ.'
                break
            case 70:
                achivement = 'Go beyond! Plus coffee'
                break
            case 80:
                achivement = 'I can‚Äôt go on like this. I\'ll drink coffee!'
                break
            case 90:
                achivement = 'More importantly, where\'s coffe!?'
                break
            case 100:
                achivement = '–¢—ã –≤—ã–ø–∏–ª 100 —á–∞—à–µ–∫ –∫–æ—Ñ–µ? –ö–∞–∫ –º–∏–ª–æ'
                break
            case 150:
                achivement = '–í–æ-–ø–µ—Ä–≤—ã—Ö, —É —Ç–µ–±—è –ª–∏—à—å —Å—Ç–æ –ø—è—Ç—å–¥–µ—Å—è—Ç —á–∞—à–µ–∫ –∫–æ—Ñ–µ. –í–æ-–≤—Ç–æ—Ä—ã—Ö, –¥–µ–ª–∞–π, –∫–∞–∫ —è –≥–æ–≤–æ—Ä—é, –∏ –Ω–µ –≤–∑–¥—É–º–∞–π –ø–∏—Ç—å –º–µ–Ω—å—à–µ –∫–æ—Ñ–µ. –í-—Ç—Ä–µ—Ç—å–∏—Ö, —á—Ç–æ –±—ã –Ω–∏ –±—ã–ª–æ –≤ –ø—Ä–æ—à–ª–æ–º, —á–∞—à–∫–∏ —á–∞—è —Ç–µ–±—è –Ω–µ –∫–∞—Å–∞—é—Ç—Å—è'
                break
            case 200:
                achivement = '–°–ª–æ–º–∞–π —Å–∏—Å—Ç–µ–º—É, –ø–æ—Å–º–æ—Ç—Ä–∏ –∞–Ω–∏–º–µ, –≥–¥–µ –º–∏–ª—ã–µ –¥–µ–≤–æ—á–∫–∏ –ø—å—é—Ç –∫—Ñ–µ.'
                break
            case 250:
                achivement = 'Wonder Coffee Priority'
                break
            case 300:
                achivement = 'Half human, half coffee, completely awesome.'
                break
            case 1300:
                achivement = '–≠—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á—Ç–æ–±—ã –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –≤–∞–Ω–Ω—É!'
                break
        }
    }

    await drinksCounters.toFile('data/drinks.json')
    await ctx.reply(`–ü—Ä–∏—è—Ç–Ω–æ–≥–æ! –ü–æ–ø–∏–ª–∏ ${drink} ${count} —Ä–∞–∑ ${emoji}\n${achivement}`, {
        reply_to_message_id: ctx.msg.message_id
    })
})
